steps:
   - id: build
  # Build my-app image
    name: gcr.io/cloud_builders/docker
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/my-app:$COMMIT_SHA
      - .
      
      
      
   - id: scan
     name: gcr.io/google.com/cloudsdktool/cloud-sdk
     entrypoint: gcloud
     args:
     - -c
     - |
       gcloud artifacts docker images scan us-central1-docker.pkg.dev/$_PROJECT_ID/ods-build-repo/ods-test:latest \
       --format='value(response.scan)' > /workspace/scan_id.txt
   - id: severity check
     name: gcr.io/google.com/cloudsdktool/cloud-sdk
     entrypoint: gcloud
     args:
     - -c
     - |
       gcloud artifacts docker images list-vulnerabilities $(cat /workspace/scan_id.txt) \
       --format='value(vulnerability.effectiveSeverity)' | if grep -Fxq $_SEVERITY; \
       then echo 'Failed vulnerability check' && exit 1; else exit 0; fi
       
       
       


  # Push my-app image to Google Cloud Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/my-app:$COMMIT_SHA

  # Configure a kubectl workspace for this project
  - name: gcr.io/cloud-builders/kubectl
    args:
      - cluster-info
    env:
      - CLOUDSDK_COMPUTE_REGION=$_CUSTOM_REGION
      - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
      - KUBECONFIG=/workspace/.kube/config

  # Deploy with Helm
  - name: gcr.io/$PROJECT_ID/helm
    args:
      - upgrade
      - -i
      - my-app
      - ./kubernetes
      - --set
      - image.repository=gcr.io/$PROJECT_ID/my-app,image.tag=$COMMIT_SHA
      - -f
      - ./kubernetes/values.yaml
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=false
      - TILLER_NAMESPACE=kube-system
timeout: 1200s
substitutions:
  _CUSTOM_REGION: us-central1-c
  _CUSTOM_CLUSTER: cloudbuild

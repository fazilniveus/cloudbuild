steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-c', '${_IMAGE_URL}:${_IMAGE_TAG}', '.']
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args: [ '-c', "gcloud secrets versions access latest --secret=sysdig_token --format='get(payload.data)' | tr '_-' '/+' | base64 -d > decrypted-data.txt" ]
  - name: 'sysdiglabs/secure-inline-scan'
    entrypoint: 'bash'
    args: [ '-c', '/bin/inline_scan.sh analyze -k $(cat decrypted-data.txt) ${_IMAGE_URL}:${_IMAGE_TAG}' ]
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${_IMAGE_URL}:${_IMAGE_TAG}']
  
  
  

  # Configure a kubeclt workspace for this project
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - cluster-info
    env:
      - CLOUDSDK_COMPUTE_REGION=$_CUSTOM_REGION
      - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
      - KUBECONFIG=/workspace/.kube/config

  # Deploy with Helm
  - name: gcr.io/$PROJECT_ID/helm
    args:
      - upgrade
      - -i
      - my-app
      - ./kubernetes
      - --set
      - image.repository=gcr.io/$PROJECT_ID/my-app,image.tag=$COMMIT_SHA
      - -f
      - ./kubernetes/values.yaml
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=false
      - TILLER_NAMESPACE=kube-system
timeout: 1200s
substitutions:
  _CUSTOM_REGION: us-central1-c
  _CUSTOM_CLUSTER: build-gke
  _IMAGE_URL: 'gcr.io/tech-rnd-project/my-app'
  _IMAGE_TAG: 'latest'

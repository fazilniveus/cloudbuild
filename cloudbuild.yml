steps:
   - id: build
     name: 'gcr.io/cloud-builders/docker'
     args: ['build', '-t', 
           'us-central1-docker.pkg.dev/${PROJECT_ID}/my-app/my-app:latest', 
           '-f','Dockerfile', '.']
           
     name: 'gcr.io/cloud-builders/docker'
     entrypoint: "bash"
     args: ['inspect', 'us-central1-docker.pkg.dev/${PROJECT_ID}/my-app/my-app:latest', 
           '-f','Dockerfile', '{{index .RepoTags 0}}@{{.Id}} > /workspace/image-digest.txt', 'cat image-digest.txt', '.']
           
           
   - id: scan
     name: gcr.io/google.com/cloudsdktool/cloud-sdk
     entrypoint: gcloud
     args:
     - -c
     - |
       gcloud artifacts docker images scan us-central1-docker.pkg.dev/$_PROJECT_ID/my-app/my-app:latest \
       --format='value(response.scan)' > /workspace/scan_id.txt
   - id: severity check
     name: gcr.io/google.com/cloudsdktool/cloud-sdk
     entrypoint: gcloud
     args:
     - -c
     - |
       gcloud artifacts docker images list-vulnerabilities $(cat /workspace/scan_id.txt) \
       --format='value(vulnerability.effectiveSeverity)' | if grep -Fxq $_SEVERITY; \
       then echo 'Failed vulnerability check' && exit 1; else exit 0; fi
   - id: push
     name: gcr.io/cloud-builders/docker
     entrypoint: /bin/bash
     args:
     - -c
     - |
       docker push us-central1-docker.pkg.dev/$_PROJECT_ID/my-app/my-app:latest
images: ['us-central1-docker.pkg.dev/$_PROJECT_ID/my-app/my-app:latest']
